[sources.nginx_logs]
  type = "file"
  include = ["{{ nginx.log_path }}/access.log"]
  read_from = "beginning"

[transforms.nginx_logs_parser]
  type = "remap"
  inputs = ["nginx_logs"]
  source = ''' 
    . = parse_json!(string!(.message))
    .timestamp = format_timestamp!(parse_timestamp!(.timestamp, format: "%Y-%m-%dT%H:%M:%S%z"), format: "%Y-%m-%d %H:%M:%S")
    .client_addr = .client_addr
    .client_port = .client_port
    .client_user = .client_user
    .request_body = .request_body
    .request = .request
    .request_length = .request_length
    .request_time = .request_time
    .server_addr = .server_addr
    .server_protocol = .server_protocol
    .ssl_protocol = .ssl_protocol
    .ssl_cipher = .ssl_cipher
    .upstream_addr = .upstream_addr
    if .upstream_response_time == "" {
      .upstream_response_time = 0.0
    } else {
      .upstream_response_time = to_float!(.upstream_response_time)
    }
    if .upstream_status == "" {
      .upstream_status = 0
    } else { 
      .upstream_status = to_int!(.upstream_status)
    }
    .http_host = .http_host
    .http_referer = .http_referer
    .http_x_forwarded_for = .http_x_forwarded_for
    .http_user_agent = .http_user_agent
    .server_host = .server_host
    .server_port = .server_port
    .uri = .uri
    .body_bytes_sent = .body_bytes_sent
    .bytes_sent = .bytes_sent
    .status = .status
  '''

[sinks.clickhouse]
  type = "clickhouse"
  inputs = ["nginx_logs_parser"]
  endpoint = "http://clickhouse:8123"
  table = "nginx_logs"
  database = "{{ clickhouse.database }}"
  compression = "none"
  skip_unknown_fields = true

[sinks.clickhouse.auth]
strategy = "basic"
user = "{{ clickhouse.user }}"
password = "{{ clickhouse.password }}" 

[sinks.clickhouse.healthcheck]
  enabled = true

#[sinks.my_console]
#  type = "console"
#  inputs = [ "nginx_logs_parser" ]
#[sinks.my_console.encoding]
#  codec = "json"
